<?xml version='1.1' encoding='UTF-8'?>
<maven2-moduleset plugin="maven-plugin@3.19">
  <actions/>
  <description>■ WSL &gt; Docker(Tomcat) 에 SSH를 이용하여 파일 전송하기 (deploy)&#xd;
&#xd;
* Deploy 후에 재기동 추가해야 함.&#xd;
&#xd;
● 설정 :&#xd;
   1) JENKINS에 SSH설정Docker(WSL_Tomcat)&#xd;
   2) Docker Port : 10022:22      (SSH)&#xd;
                             18080:8080  (서비스)&#xd;
● git : https://github.com/brandon99991/cicd-web-project&#xd;
● Target : WSL &gt; Docker(Tomcat)&#xd;
                /usr/local/tomcat/webapps/&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.NonInheritingStrategy"/>
    </hudson.security.AuthorizationMatrixProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.13.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/brandon99991/redis_project.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(System)</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <rootModule>
    <groupId>spring-session-redis-cluster</groupId>
    <artifactId>spring-session-redis-cluster</artifactId>
  </rootModule>
  <rootPOM>spring/spring-session-redis-cluster/pom.xml</rootPOM>
  <goals>clean compile package</goals>
  <mavenName>Maven3.8.6</mavenName>
  <aggregatorStyleBuild>true</aggregatorStyleBuild>
  <incrementalBuild>false</incrementalBuild>
  <ignoreUpstremChanges>false</ignoreUpstremChanges>
  <ignoreUnsuccessfulUpstreams>false</ignoreUnsuccessfulUpstreams>
  <archivingDisabled>false</archivingDisabled>
  <siteArchivingDisabled>false</siteArchivingDisabled>
  <fingerprintingDisabled>false</fingerprintingDisabled>
  <resolveDependencies>false</resolveDependencies>
  <processPlugins>false</processPlugins>
  <mavenValidationLevel>-1</mavenValidationLevel>
  <runHeadless>false</runHeadless>
  <disableTriggerDownstreamProjects>false</disableTriggerDownstreamProjects>
  <blockTriggerWhenBuilding>true</blockTriggerWhenBuilding>
  <settings class="jenkins.mvn.DefaultSettingsProvider"/>
  <globalSettings class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
  <reporters/>
  <publishers>
    <jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin plugin="publish-over-ssh@1.24">
      <consolePrefix>SSH: </consolePrefix>
      <delegate plugin="publish-over@0.22">
        <publishers>
          <jenkins.plugins.publish__over__ssh.BapSshPublisher plugin="publish-over-ssh@1.24">
            <configName>k8s-master</configName>
            <verbose>true</verbose>
            <transfers>
              <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <remoteDirectory>/home/nfs/wildfly18_redis/tmp/webapps/rediscluster01.war</remoteDirectory>
                <sourceFiles>spring/spring-session-redis-cluster/target/*.war</sourceFiles>
                <excludes></excludes>
                <removePrefix>spring/spring-session-redis-cluster/target</removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <execCommand>cd /home/nfs/wildfly18_redis/tmp/webapps;
touch rediscluster01.war.deployed
cd /home/nfs/wildfly18_redis/tmp/webapps/rediscluster01.war;
/home/user01/javahome/jdk1.8.0_77/bin/jar xvf rediscluster01.war;
/usr/bin/kubectl delete deploy wildfly18-redis;
/usr/bin/kubectl create -f /home/user01/winshare/docker/wildfly/wildfly18/k8s.redis/redis_deploy.yaml;

</execCommand>
                <execTimeout>120000</execTimeout>
                <usePty>false</usePty>
                <useAgentForwarding>false</useAgentForwarding>
                <useSftpForExec>false</useSftpForExec>
              </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                <remoteDirectory>/home/nfs/tomcat9_redis/webapps</remoteDirectory>
                <sourceFiles>spring/spring-session-redis-cluster/target/*.war</sourceFiles>
                <excludes></excludes>
                <removePrefix>spring/spring-session-redis-cluster/target</removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <execCommand>/usr/bin/kubectl delete deploy tomcat9-redis;
/usr/bin/kubectl create -f /home/user01/winshare/docker/tomcat/tomcat9/k8s.redis/redis_deploy.yaml;</execCommand>
                <execTimeout>120000</execTimeout>
                <usePty>false</usePty>
                <useAgentForwarding>false</useAgentForwarding>
                <useSftpForExec>false</useSftpForExec>
              </jenkins.plugins.publish__over__ssh.BapSshTransfer>
            </transfers>
            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
            <usePromotionTimestamp>false</usePromotionTimestamp>
          </jenkins.plugins.publish__over__ssh.BapSshPublisher>
        </publishers>
        <continueOnError>false</continueOnError>
        <failOnError>false</failOnError>
        <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
        <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshPublisherPlugin>
  </publishers>
  <buildWrappers/>
  <prebuilders/>
  <postbuilders/>
  <runPostStepsIfResult>
    <name>FAILURE</name>
    <ordinal>2</ordinal>
    <color>RED</color>
    <completeBuild>true</completeBuild>
  </runPostStepsIfResult>
</maven2-moduleset>